{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacton\\\\appOne\\\\appone\\\\src\\\\App.jsx\";\nimport React from \"react\";\n// import Cards  from \"./Cards\";\n// import Heading from \"./Heading\";\n\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar x = 1;\nconst badhado = props => {\n  x = x + props.num;\n  console.log(x);\n};\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: badhado,\n      num: \"1\",\n      children: \"Click on Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","x","badhado","props","num","console","log","App"],"sources":["D:/reacton/appOne/appone/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\n// import Cards  from \"./Cards\";\r\n// import Heading from \"./Heading\";\r\n\r\nimport \"./index.css\";\r\nvar x=1;\r\nconst badhado=(props)=>{\r\n    x=x+props.num;\r\n    console.log(x);\r\n}\r\nconst App=()=>{\r\n   \r\n        return(\r\n            <>\r\n            <h1>{x}</h1>\r\n           <button onClick={badhado} num=\"1\">Click on Me</button>\r\n\r\n        </>)}\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;;AAEA,OAAO,aAAa;AAAC;AAAA;AACrB,IAAIC,CAAC,GAAC,CAAC;AACP,MAAMC,OAAO,GAAEC,KAAK,IAAG;EACnBF,CAAC,GAACA,CAAC,GAACE,KAAK,CAACC,GAAG;EACbC,OAAO,CAACC,GAAG,CAACL,CAAC,CAAC;AAClB,CAAC;AACD,MAAMM,GAAG,GAAC,MAAI;EAEN,oBACI;IAAA,wBACA;MAAA,UAAKN;IAAC;MAAA;MAAA;MAAA;IAAA,QAAM,eACb;MAAQ,OAAO,EAAEC,OAAQ;MAAC,GAAG,EAAC,GAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA,gBAEtD;AAAC,CAAC;AAAA,KAPPK,GAAG;AAQT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}